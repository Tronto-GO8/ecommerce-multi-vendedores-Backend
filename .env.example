# ⚠️ ATENÇÃO: Este arquivo é um modelo para um arquivo que deve ser criado em sua máquina local que contém informações sensíveis!
# Cada participante deve criar seu próprio arquivo .env na raiz do repositório copiando este exemplo
# e preencha com os valores reais (senhas, chaves, tokens, URLs de banco, etc.) que serão fornecidos no privado.
# Nunca compartilhe este arquivo ou comite no GitHub, mas o caso acontece o .gitgnore já foi definido para ignorar o arquivo .env.

#Como usar:
#Instalar o pacote usado para pegar os dados desse arquivo: npm install dotenv

#Importar no início do seu backend (server.js ou index.js):

#Código de exemplo de como usar ESTA EM JAVASCRIPT:
#import dotenv from "dotenv";
#dotenv.config();
#//Acessar as variáveis do .env no código:
#const emailUser = process.env.EMAIL_USER;
#const emailPass = process.env.EMAIL_PASS;

# -------------------------------
# Configurações do backend
# -------------------------------

# Porta que o backend vai rodar
PORTA=3000
# -------------------------------
# Banco de dados
# -------------------------------

#String de conexão (ex: PostgreSQL)
DATABASE_URL=postgres://USUÁRIO:SENHA@HOST:PORTA/BANCO DE DADOS

# -------------------------------
# E-mail (SMTP) - Nodemailer
# -------------------------------
EMAIL_USER = seuemail@gmail.com
EMAIL_PASS = sua_senha_app

# -------------------------------
# OAuth2 (Google)
# -------------------------------
GOOGLE_CLIENT_ID = seu_client_id_aqui
GOOGLE_CLIENT_SECRET = seu_client_secret_aqui
GOOGLE_REDIRECT_URI = http://localhost:3000/auth/callback

# -------------------------------
# JWT / autenticação interna
# -------------------------------
JWT_SECRET = chave_super_secreta_para_tokens
JWT_EXPIRES_IN = 1h

# -------------------------------
# Outras chaves/API de serviços
# -------------------------------
