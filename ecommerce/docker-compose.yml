networks:
  ecommerce_network:

services:
  java:
    build:
      context: .
      dockerfile: Dockerfile
    networks:
      - ecommerce_network
    ports:
      - "8080:8080"
    environment:
#      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      SPRING_SECRET_JWT: ${SPRING_SECRET_JWT}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      GOOGLE_ID_CLIENT: ${GOOGLE_ID_CLIENT}

    depends_on:
      db:
        condition: service_healthy # Espera o db SUBIR

  db:
    image: mysql:8.0.43-debian
    container_name: db
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      MYSQL_DATABASE: ecommerce_db
    command: [
           '--default-authentication-plugin=mysql_native_password',
           '--lower-case-table-names=1'
             ]
    volumes:
      - ./db-init-scripts:/docker-entrypoint-initdb.d

    healthcheck: # Adiciona um healthcheck ao servi√ßo do banco de dados
      test: [ "CMD", "mysql", "-h", "localhost", "-P", "3306", "-u", "root", "--password=root", "-e", "select 1", "ecommerce_db" ]
      interval: 1s
      timeout: 3s
      retries: 5
    networks:
      - ecommerce_network

